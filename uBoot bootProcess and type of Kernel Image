vmlinux--> uncompressed version of the Linux image (it is created when you do make)
zImage --> a compressed version of the Linux kernel image that is self-extracting
uImage --> Image(Linux kernel image) with a uBoot wrapper

kernel Image generated by mkImage utility, 
U-Boot with only bootm command, needs uImage
recent versions of U-Boot with bootz command can boot a zImage.

Good practice use zImage, if possible and not uImage\

Kernel: arch/arm/boot/Image is ready
>  Kernel: arch/arm/boot/zImage is ready
> multiple load addresses: 0x80008000 0x80008000 0x10008000
> This is incompatible with uImages
> Specify LOADADDR on the commandline to build an uImage

For make uImage, LOADADDR is mandatory, i.e 
make uImage LOADADDR=0x10008000
The LOADADDR given by processor ex: IMX6 (Find where I can read this value from?)

Boot Process:
1. Booting with the Serial Loader : SOC has to be in serial loader mode (used to chaneg the mdoe from debug board connected)
which means you should remove any other boot device such as an SD-card before powering the board.
When the SOC is in serial loader mode and you connect a Micro-USB cable to the OTG-Port of the board, your host PC should detect a new USB device.
On Linux you can check for the device with lsusb
To download and run content from your host PC on the device you can either use the official NXP/Freescale-Tool called MfgTool (latest version runs on Windows and Linux), 
or if you use Linux, you can use the simple commandline tool imx_usb_loader from Boundary Devices
imx_usb_loader
To load a full system (Bootloader, Kernel, FDT, initramfs) to the RAM and start it, you can edit the configuration file mx6_usb_work.conf.
Here is an example:
imx6_qsb
#hid/bulk,[old_header,]max packet size, dcd_addr, {ram start, ram size}(repeat valid ram areas)
hid,1024,0x910000,0x10000000,128M,0x00900000,0x40000
/home/user/yocto-exceet/build-exceet-morty/tmp/deploy/images/u-boot.imx:dcd
/home/user/yocto-exceet/build-exceet-morty/tmp/deploy/images/zImage:load 0x82000000
/home/user/yocto-exceet/build-exceet-morty/tmp/deploy/images/zImage-imx6ul-testadapter.dtb:load 0x83000000
/home/user/yocto-exceet/build-exceet-morty/tmp/deploy/images/image-exceet-initramfs-production-mx6ul-testadapter.cpio.gz.u-boot:load 0x83C00000
/home/user/yocto-exceet/build-exceet-morty/tmp/deploy/images/u-boot.imx:clear_dcd,load,jump header

then you need to start the tool (needs root privileges on most systems):
user@exceet:~/imx_usb_loader$ sudo ./imx_usb

MfgTool
The MfgTool uses an XML file (ucl2.xml) for configuration.

2. Booting from SD-Card
create 2 partitions on sdcard boot (kernel & dtbs) & RFS
copy kernelImage & dtb onto boot partition and RFS onto RFS partition

On uBoot check bootargs, change if needed saveenv to save bootargs and printenv to print, 
then run boot
dd if=image.sdcard of=/dev/mmc bs=1M conv=sync
